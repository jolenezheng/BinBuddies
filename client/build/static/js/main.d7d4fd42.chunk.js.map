{"version":3,"sources":["history.js","Login.jsx","box.png","Home.jsx","ImageRecognition.jsx","App.js","index.js"],"names":["createBrowserHistory","Login","props","noValidate","autoComplete","TextField","id","label","to","Button","variant","ImageModalParent","useState","setSelectedImage","onClick","defaultImage","pathname","state","image","ManualModalParent","parentCallback","detectedObject","setDetectedObject","type","name","FetchModal","currentObject","history","location","init","setInit","data","setData","url","includes","QuestionModal","fetch","method","then","res","json","catch","e","console","log","length","push","map","i","title","result","info","materialStream","content","FinalResult","className","Home","uploadModal","setUploadModal","manualModal","setManualModal","handleCloseParent","handleCallback","Modal","open","onClose","ImageRecognition","setResult","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7d4fd42.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { useState } from \"react\";\nimport {TextField, Button} from '@material-ui/core/';\nimport {Link } from \"react-router-dom\";\n\nfunction Login(props) {\n\n  return(\n    <div>\n      LOGIN\n      <form noValidate autoComplete=\"off\">\n        <TextField id=\"user\" label=\"Username\" />\n        <TextField id=\"pass\" label=\"Password\" />\n      </form>\n      <Link to=\"/home\">\n      <Button variant=\"contained\">Login</Button>\n      </Link>\n    </div>\n  )\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/box.1c939293.png\";","import React, { useState } from \"react\";\nimport {Button, Modal, Typography} from '@material-ui/core/';\nimport {Link} from \"react-router-dom\";\nimport './App.css';\nimport history from './history';\nimport defaultImage from './box.png';\n\nfunction Home(props) {\n  //closed by default\n  const [uploadModal, setUploadModal] = useState(false);\n  const [manualModal, setManualModal] = useState(false);\n  const [detectedObject, setDetectedObject] = useState(null);\n\n  const handleUploadModal = () => {\n    setUploadModal(true);\n  }\n\n  const handleManualModal = () => {\n    setManualModal(true);\n  }\n\n  const handleCloseParent = () => {\n    setManualModal(false);\n    setUploadModal(false);\n  }\n\n  let handleCallback = (data) => {\n    //set object here too - this could be used for the image and manual modals\n    //data is what the child sent - now u can use that in the q&a modal\n    setDetectedObject(data);\n    // open the q&a modal, close parents\n    handleCloseParent();\n  }\n  \n  if (detectedObject) {\n    return (\n      <FetchModal detectedObject={detectedObject}/>\n    )\n  }\n\n  return(\n    <div>\n      <Link to=\"/\">\n        <Button variant=\"contained\">Logout</Button>\n      </Link>\n      Home\n      <Button variant=\"contained\" onClick={handleUploadModal}>Upload pic</Button>\n      <Button variant=\"contained\" onClick={handleManualModal}>Manual</Button>\n      <Modal\n        open={uploadModal}\n        onClose={handleCloseParent}\n      >\n        <div className=\"testModal\">\n          <ImageModalParent parentCallback={handleCallback} />\n        </div>\n      </Modal>\n      <Modal\n        open={manualModal}\n        onClose={handleCloseParent}\n      >\n        <div className=\"testModal\">\n          <ManualModalParent parentCallback={handleCallback}/>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nfunction ImageModalParent(props) {\n  // let {parentCallback} = props;\n  // const [detectedObject, setDetectedObject] = useState();\n  let [selectedImage, setSelectedImage] = useState();\n  \n  // let handleSubmit = () => {\n  //   //this happens on success - send the detectedObject to the parent\n  //   parentCallback(detectedObject);\n  // }\n\n  let handleUpload = () => {\n      //    {/* image uploading would be here - select the image here somehow */}\n      // {/* do we just wanna put a fake image of choosing a picture? */}\n    setSelectedImage(defaultImage);\n  }\n\n  // if (detectedObject) {\n  //   return (\n  //     <div>\n  //       Is {detectedObject} the item you submitted?\n  //       <Button variant=\"contained\" onClick={handleSubmit}>Yes</Button>\n  //       <Button variant=\"contained\" onClick={() => setDetectedObject(null)}>No</Button>\n  //     </div>\n  //   )\n  // }\n  // default - no object detected yet\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={handleUpload}>\n        Select a picture\n      </Button>\n      <Link \n        to={{\n            pathname: \"/testAPI\",\n            state: { image: defaultImage }\n          }}\n        >\n          <Button variant=\"contained\">Upload</Button>\n      </Link>\n    </div>\n  )\n}\n\nfunction ManualModalParent(props) {\n  let {parentCallback} = props;\n  const [detectedObject, setDetectedObject] = useState();\n    \n  let handleSubmit = () => {\n    //this happens on success - send the detectedObject to the parent\n    parentCallback(detectedObject);\n  }\n\n  return (\n    <div>\n      What is your item?\n      <form>\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Bottle\")}}>Jugs or Bottles</Button></p>     \n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Containers\")}}>Containers</Button></p>\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Textiles\")}}>Textiles</Button></p>\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Electronics\")}}>Electronics</Button></p>\n      <label>\n          Other: \n            <input type = \"text\" name=\"other\" />\n      </label>\n        <Button variant=\"contained\" onClick={handleSubmit}>Submit</Button>\n      </form>\n    </div>\n  )\n}\n\nexport function FetchModal(props) {\n  let {detectedObject} = props;\n\n  let currentObject = (props.history.location.state || detectedObject || \"box\"); // result from image api\n\n  let [init, setInit] = useState(false);\n  let [data, setData] = useState();\n  let predefined = [\"containers\", \"jugs\", \"bottles\", \"electronics\", \"propane tanks\"];\n\n  let fetchResults = (URL) => {\n    fetch(URL, {\n      method: 'GET',\n    })\n    .then(res => res.json())\n    .then((json) => {\n      setData(json);\n      setInit(true);\n    })\n    .catch((e) => console.log(e));\n  }\n\n  let url = `https://data.edmonton.ca/resource/gtej-pcij.json?$where=material_title like '%25${currentObject}%25'`;\n  if (predefined.includes(currentObject)) {\n    // go straight to question/answer flow\n    return (<QuestionModal detectedObject={currentObject}/>)\n  } else {\n    if (!init) {\n      fetchResults(url);\n    }\n  }\n\n  if (data && data.length === 1) {\n    // go to next... i dont think this works\n    history.push('/final');\n  }\n\n  if (!init) {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {data && (data.length > 1) \n        && data.map((data, i) => {\n          return (\n            <Link \n                to={{\n                    pathname: \"/final\",\n                    state: { title: data[\"material_title\"], result: data[\"stream_title\"], info: data[\"special_instructions\"]}\n                  }}\n            >\n              <Button>\n                {data[\"material_title\"]}\n              </Button>\n            </Link>\n          )\n      })}\n    </div>\n  )\n}\n\n// the styling for questions can go here for now?\nfunction QuestionModal(props) {\n  let {detectedObject, parentCallback} = props;\n  let [result, setResult] = useState(); // \"R\" or \"W\"\n  let [materialStream, setMaterialStream] = useState();\n\n  // assuming these are the only options we will handle:\n  // container, jug, bottle, electronic, propane tanks\n  // other will get handled differently\n  let containerContent = [\n    \"Is the container empty and dry?\",\n    \"Please dry the container\"\n  ];\n\n  let jugContent = [\n    \"Is there a straw or lid?\",\n    \"Please separate the straw and lid and send them to waste\",\n    \"Is it less than 5 liters?\"\n  ]\n\n  if (materialStream) {\n    return (\n      <div>\n        We recommend: {materialStream}\n      </div>\n    )\n  }\n\n  //default\n  let content = (<div>Next results</div>)\n\n  if (detectedObject === 'box') {\n    content = (\n      <div>\n        {containerContent[0]}\n        {/* when buttons are clicked, should go to next page */}\n        <Button variant=\"contained\">Yes</Button>\n        <Button variant=\"contained\">No</Button>\n      </div>\n    )\n  }\n\n  if (detectedObject === 'jug' || detectedObject === 'bottle') {\n    content = (\n      <div>\n        {jugContent[0]}\n        <Button variant=\"contained\">Yes</Button>\n        <Button variant=\"contained\">No</Button>\n      </div>\n    )\n  }\n\n  if (detectedObject === 'electronic' || detectedObject === 'propane tank') {\n    content = (\n      <div>\n        Look for the closest disposal center near you! (google maps?)\n      </div>\n    )\n  }\n\n  // why are we asking what material is this?\n\n  return (\n    <div>\n      <h1>Follow Up Questions: {detectedObject}</h1>\n      {content}\n    </div>\n  )\n}\n\nexport function FinalResult(props) {\n  // if passing through link\n  // <Link \n  //     to={{\n  //         pathname: \"/final\",\n  //         state: { title: ..., result: ..., info: ...}\n  //       }}\n  // >\n  // content here\n  // </Link>\n  let {title, result, info} = props.history.location.state;\n\n  console.log(result.includes(\"Recyc\"));\n\n  return (\n    <div className=\"finalScreen\">\n    <h3>\n      {result.includes(\"Recyc\") ? \"Your item is recyclable!\" : \"Your item is not recyclable\"}\n    </h3>\n    <div className=\"finalDesc\">\n      <h1>\n        {result}\n      </h1>\n      <body>\n        {info}\n      </body>\n    </div>\n    <div className=\"finalButton\">\n      <Link to=\"/home\">\n        Start Over\n      </Link>\n    </div>\n    </div>\n  )\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport {Button} from '@material-ui/core/';\nimport {Link} from \"react-router-dom\";\n\nfunction ImageRecognition(props) {\n  let {image} = props.history.location.state; // image can be accessed here\n  let [selectedImage, setSelectedImage] = useState(image);\n  let [result, setResult] = useState(); // save result here after fetch\n  let [init, setInit] = useState(false);\n\n  let fetchResult = () => {\n    //fetch google result here\n    setResult(\"box\");\n    setInit(true);\n  }\n  if (!init) {\n    fetchResult();\n  }\n\n\n  if (result) {\n    return (\n      <div>\n        Your photo has been recognized. Your item: {result}\n        <Link \n            to={{\n                pathname: \"/fetching\",\n              }}\n        >\n          <Button>\n            Yes, Proceed\n          </Button>\n        </Link>\n        \n        <Button>\n          No, let's try again\n        </Button>\n      </div>\n    )\n  }\n\n  return(\n    <div>\n      Loading...\n    </div>\n  )\n}\n\nexport default ImageRecognition;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { Route, Switch } from \"react-router-dom\";\nimport history from './history';\nimport './App.css';\n// import { createBrowserHistory as history } from 'history';\nimport Login from './Login';\nimport Home, {FinalResult, FetchModal} from './Home';\nimport ImageRecognition from './ImageRecognition'\n\nfunction App() {\n  return (\n    <Router history={history}>\n        <div className=\"App\">\n              <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/home\" component={Home} />\n              <Route path=\"/final\" component={FinalResult} />\n              <Route path=\"/testAPI\" component={ImageRecognition} />\n              <Route path=\"/fetching\" component={FetchModal} />\n              </Switch>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}