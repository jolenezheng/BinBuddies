{"version":3,"sources":["history.js","Login.jsx","Home.jsx","App.js","index.js"],"names":["createBrowserHistory","Login","props","noValidate","autoComplete","TextField","id","label","to","Button","variant","ImageModalParent","parentCallback","useState","detectedObject","setDetectedObject","className","onClick","ManualModalParent","type","name","FetchModal","init","setInit","data","setData","url","includes","QuestionModal","fetch","method","then","res","json","catch","e","console","log","length","history","push","map","i","pathname","state","title","result","info","materialStream","setResult","nextStep","setNextStep","containerContent","jugContent","content","FinalResult","location","Home","uploadModal","setUploadModal","manualModal","setManualModal","questionModal","setQuestionModal","handleCloseParent","handleCloseChild","handleCallback","Modal","open","onClose","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00a31627.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { useState } from \"react\";\r\nimport {TextField, Button} from '@material-ui/core/';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n\r\n  return(\r\n    <div>\r\n      LOGIN\r\n      <form noValidate autoComplete=\"off\">\r\n        <TextField id=\"user\" label=\"Username\" />\r\n        <TextField id=\"pass\" label=\"Password\" />\r\n      </form>\r\n      <Link to=\"/home\">\r\n      <Button variant=\"contained\">Login</Button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport {Button, Modal} from '@material-ui/core/';\r\nimport {Link} from \"react-router-dom\";\r\nimport './App.css';\r\nimport history from './history';\r\n\r\nfunction Home(props) {\r\n  //closed by default\r\n  const [uploadModal, setUploadModal] = useState(false);\r\n  const [manualModal, setManualModal] = useState(false);\r\n  const [questionModal, setQuestionModal] = useState(false);\r\n  const [detectedObject, setDetectedObject] = useState();\r\n\r\n  const handleUploadModal = () => {\r\n    setUploadModal(true);\r\n  }\r\n\r\n  const handleManualModal = () => {\r\n    setManualModal(true);\r\n  }\r\n\r\n  const handleCloseParent = () => {\r\n    setManualModal(false);\r\n    setUploadModal(false);\r\n  }\r\n\r\n  const handleCloseChild = () => {\r\n    setQuestionModal(false);\r\n  }\r\n\r\n  let handleCallback = (data) => {\r\n    //set object here too - this could be used for the image and manual modals\r\n    //data is what the child sent - now u can use that in the q&a modal\r\n    setDetectedObject(data);\r\n    // open the q&a modal, close parents\r\n    handleCloseParent();\r\n    setQuestionModal(true);\r\n\t} \r\n\r\n  return(\r\n    <div>\r\n      <Link to=\"/\">\r\n        <Button variant=\"contained\">Logout</Button>\r\n      </Link>\r\n      Home\r\n      <Button variant=\"contained\" onClick={handleUploadModal}>Upload pic</Button>\r\n      <Button variant=\"contained\" onClick={handleManualModal}>Manual</Button>\r\n      <Modal\r\n        open={uploadModal}\r\n        onClose={handleCloseParent}\r\n      >\r\n        <div className=\"testModal\">\r\n          <ImageModalParent parentCallback={handleCallback} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={manualModal}\r\n        onClose={handleCloseParent}\r\n      >\r\n        <div className=\"testModal\">\r\n          <ManualModalParent parentCallback={handleCallback}/>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={questionModal}\r\n        onClose={handleCloseChild}\r\n      >\r\n        <div className=\"testModal\">\r\n          <FetchModal detectedObject={detectedObject} parentCallback={handleCloseChild}/>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ImageModalParent(props) {\r\n  let {parentCallback} = props;\r\n  const [detectedObject, setDetectedObject] = useState();\r\n  \r\n  let handleSubmit = () => {\r\n    //this happens on success - send the detectedObject to the parent\r\n    parentCallback(detectedObject);\r\n  }\r\n\r\n  let handleUpload = () => {\r\n    // upload the image to the google thing, get the result\r\n    //set the detected object below to the state\r\n    setDetectedObject('box');\r\n  }\r\n  if (detectedObject) {\r\n    return (\r\n      <div className = \"submittedPrompt\">\r\n        Is {detectedObject} the item you submitted?\r\n        <div className = \"containerButtonsStacked\">\r\n        <Button className = \"yesContainerStacked\" variant=\"contained\" onClick={handleSubmit}>Yes</Button>\r\n        <Button className = \"noContainerStacked\" variant=\"contained\" onClick={() => setDetectedObject(null)}>No</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  // default - no object detected yet\r\n  return (\r\n    <div>\r\n      Upload picture (google cloud)\r\n      {/* image uploading would be here */}\r\n      <Button variant=\"contained\" onClick={handleUpload}>Upload</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ManualModalParent(props) {\r\n  let {parentCallback} = props;\r\n  const [detectedObject, setDetectedObject] = useState();\r\n    \r\n  let handleSubmit = () => {\r\n    //this happens on success - send the detectedObject to the parent\r\n    parentCallback(detectedObject);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      What is your item?\r\n      <form>\r\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Bottle\")}}>Jugs or Bottles</Button></p>     \r\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Containers\")}}>Containers</Button></p>\r\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Textiles\")}}>Textiles</Button></p>\r\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Electronics\")}}>Electronics</Button></p>\r\n      <label>\r\n          Other: \r\n            <input type = \"text\" name=\"other\" />\r\n      </label>\r\n        <Button variant=\"contained\" onClick={handleSubmit}>Submit</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction FetchModal(props) {\r\n  let {detectedObject, parentCallback} = props;\r\n  let [init, setInit] = useState(false);\r\n  let [isPredefined, setIsPredefined] = useState(false);\r\n  let [data, setData] = useState();\r\n  let predefined = [\"containers\", \"jugs\", \"bottles\", \"electronics\", \"propane tanks\"];\r\n\r\n  let fetchResults = (URL) => {\r\n    fetch(URL, {\r\n      method: 'GET',\r\n    })\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n      setData(json);\r\n      setInit(true);\r\n    })\r\n    .catch((e) => console.log(e));\r\n  }\r\n\r\n  let url = `https://data.edmonton.ca/resource/gtej-pcij.json?$where=material_title like '%25${detectedObject}%25'`;\r\n  if (predefined.includes(detectedObject)) {\r\n    // go straight to question/answer flow\r\n    return (<QuestionModal detectedObject={detectedObject} parentCallback={parentCallback}/>)\r\n  } else {\r\n    if (!init) {\r\n      fetchResults(url);\r\n    }\r\n  }\r\n\r\n  if (data && data.length === 1) {\r\n    // go to next... i dont think this works\r\n    history.push('/final');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data && (data.length > 1) \r\n        && data.map((data, i) => {\r\n          return (\r\n            <Link \r\n                to={{\r\n                    pathname: \"/final\",\r\n                    state: { title: data[\"material_title\"], result: data[\"stream_title\"], info: data[\"special_instructions\"]}\r\n                  }}\r\n            >\r\n              <Button>\r\n                {data[\"material_title\"]}\r\n              </Button>\r\n            </Link>\r\n          )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\n// the styling for questions can go here for now?\r\nfunction QuestionModal(props) {\r\n  let {detectedObject, parentCallback} = props;\r\n  let [materialModal, setMaterialModal] = useState(false);\r\n  let [materialStream, setMaterialStream] = useState();\r\n  let [result, setResult] = useState(null); // \"r\" or \"w\"\r\n  let [nextStep, setNextStep] = useState(); // 'follow up', 'next', or 'material'\r\n  \r\n\r\n  // assuming these are the only options we will handle:\r\n  // container, jug, bottle, electronic, propane tanks, textiles\r\n  // other will get handled differently\r\n  let containerContent = [\r\n    \"\",\r\n    \"Please dry the container\"\r\n  ];\r\n\r\n  let jugContent = [\r\n    \"Is there a straw or lid?\",\r\n    \"Please separate the straw and lid and send them to waste\",\r\n    \"Is it less than 5 liters?\"\r\n  ]\r\n\r\n  if (materialStream) {\r\n    return (\r\n      <div>\r\n        We recommend: {materialStream}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //default\r\n  let content = (<div>Next results</div>)\r\n\r\n  while(result === null) {\r\n    // Qs for Item types (Step 1)\r\n    if (detectedObject === 'box' || detectedObject === 'containers') {\r\n      content = (\r\n        <div>\r\n          {containerContent[0]}\r\n          <Button variant=\"contained\" onClick={() => setNextStep('material')}>Yes</Button>\r\n          <Button variant=\"contained\" onClick={() => setNextStep('follow up')}>No</Button>\r\n        </div>\r\n      )\r\n      if (nextStep === 'follow up') {\r\n        content = (\r\n          <div>\r\n            {containerContent[1]}\r\n            <Button variant=\"contained\" onClick={() => setNextStep('material')}>All Done!</Button>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    else if (detectedObject === 'jugs' || detectedObject === 'bottles') {\r\n      content = (\r\n        <div>\r\n          {jugContent[0]}\r\n          <Button variant=\"contained\" onClick={() => setNextStep('follow up')}>Yes</Button>\r\n          <Button variant=\"contained\" onClick={() => setNextStep('next')}>No</Button>\r\n        </div>\r\n      ) \r\n      if (nextStep === 'follow up') {\r\n          content = (\r\n            <div>\r\n              {jugContent[1]}\r\n              <Button variant=\"contained\" onClick={() => setNextStep('next')}>All Done!</Button>\r\n            </div>\r\n          )\r\n      } if (nextStep === 'next') {\r\n          content = (\r\n            <div>\r\n              {jugContent[2]}\r\n              <Button variant=\"contained\" onClick={() => setNextStep('material')}>Yes</Button>\r\n              <Button variant=\"contained\" onClick={() => setResult('w')}>No</Button>\r\n            </div>\r\n          )\r\n        }\r\n    }\r\n    else if (detectedObject === 'electronics' || detectedObject === 'propane tanks') {\r\n      content = (\r\n        <div>\r\n          Look for the closest disposal center near you! (google maps?)\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      setNextStep('material');\r\n    }\r\n\r\n    //Material Qs\r\n    if (nextStep === 'material') {\r\n      content = (\r\n        <div>\r\n          What material is your item made of?\r\n          <Button variant=\"contained\" onClick={() => setNextStep('glass')}>Glass</Button>\r\n          <Button variant=\"contained\" onClick={() => setNextStep('plastic')}>Plastic</Button>\r\n          <Button variant=\"contained\" onClick={() => setResult('r')}>Metal</Button>\r\n          <Button variant=\"contained\" onClick={() => setNextStep('paper')}>Paper</Button>\r\n          <Button variant=\"contained\" onClick={() => setResult('w')}>Styrofoam</Button>\r\n        </div>\r\n      ) \r\n      if (nextStep === 'glass') {\r\n        content = (\r\n          <div>\r\n            Is it broken?\r\n            <Button variant=\"contained\" onClick={() => setResult('w')}>Yes</Button>\r\n            <Button variant=\"contained\" onClick={() => setResult('r')}>No</Button>\r\n          </div>\r\n        )\r\n      } else if (nextStep === 'plastic') {\r\n        content = (\r\n          <div>\r\n            Please Enter the SPI Number. (form)\r\n          </div>\r\n        )\r\n      } else if (nextStep === 'paper') {\r\n        content = (\r\n          <div>\r\n            Is there a wax or plastic coating?\r\n            <Button variant=\"contained\" onClick={() => setResult('w')}>Yes</Button>\r\n            <Button variant=\"contained\" onClick={() => setResult('r')}>No</Button>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {content}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function FinalResult(props) {\r\n  // if passing through link\r\n  // <Link \r\n  //     to={{\r\n  //         pathname: \"/final\",\r\n  //         state: { title: ..., result: ..., info: ...}\r\n  //       }}\r\n  // >\r\n  // content here\r\n  //</Link>\r\n  let {title, result, info} = props.history.location.state;\r\n\r\n  return (\r\n    <div>\r\n    <h1>\r\n      {title}\r\n    </h1>\r\n    We suggest:\r\n    <p>\r\n      {result}\r\n    </p>\r\n    <p>\r\n      {info}\r\n    </p>\r\n    <Link to=\"/home\">\r\n      Start Over\r\n    </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport history from './history';\r\nimport './App.css';\r\n// import { createBrowserHistory as history } from 'history';\r\nimport Login from './Login';\r\nimport Home, {FinalResult} from './Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={history}>\r\n        <div className=\"App\">\r\n              <Switch>\r\n              <Route exact path=\"/\" component={Login} />\r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/final\" component={FinalResult} />\r\n              </Switch>\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}