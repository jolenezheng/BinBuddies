{"version":3,"sources":["history.js","Login.jsx","box.png","Home.jsx","ImageRecognition.jsx","App.js","index.js"],"names":["createBrowserHistory","Login","props","useState","click","setClick","className","noValidate","autoComplete","TextField","id","label","to","Button","variant","onClick","ImageModalParent","setSelectedImage","defaultImage","pathname","state","image","ManualModalParent","parentCallback","detectedObject","setDetectedObject","type","name","FetchModal","currentObject","history","location","init","setInit","data","setData","url","includes","QuestionModal","fetch","method","then","res","json","catch","e","console","log","length","push","map","i","title","result","info","setResult","nextStep","setNextStep","materialType","setMaterialType","materialStream","containerContent","jugContent","content","FinalResult","Home","uploadModal","setUploadModal","manualModal","setManualModal","handleCloseParent","handleCallback","Modal","open","onClose","ImageRecognition","onclick","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c560ea3c.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { useState } from \"react\";\r\nimport {TextField, Button} from '@material-ui/core/';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const [click, setClick] = useState(false);\r\n  \r\n  let handleClick = () => {\r\n    setClick(true)\r\n  }\r\n\r\n  if (click){\r\n    return(\r\n      <div className=\"loginPage\">\r\n      <form noValidate autoComplete=\"off\">\r\n        <div className = \"username\"><TextField  id=\"user\" label=\"Username\" /></div>\r\n        <div className = \"password\" ><TextField  id=\"pass\" label=\"Password\" /></div>\r\n      </form>\r\n      <Link to=\"/home\">\r\n        <div className=\"loginButton3\"><Button className = \"loginButton2\" variant=\"contained\">Login</Button></div>\r\n      </Link>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div className=\"starterPage\">\r\n      <div className = 'loginButton'><Button className = 'loginButton'  onClick={()=>{handleClick()}} variant=\"contained\">Login</Button></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/box.1c939293.png\";","import React, { useState } from \"react\";\r\nimport {Button, Modal, Typography} from '@material-ui/core/';\r\nimport {Link} from \"react-router-dom\";\r\nimport './App.css';\r\nimport history from './history';\r\nimport defaultImage from './box.png';\r\n\r\nfunction Home(props) {\r\n  //closed by default\r\n  const [uploadModal, setUploadModal] = useState(false);\r\n  const [manualModal, setManualModal] = useState(false);\r\n  const [detectedObject, setDetectedObject] = useState(null);\r\n\r\n  const handleUploadModal = () => {\r\n    setUploadModal(true);\r\n  }\r\n\r\n  const handleManualModal = () => {\r\n    setManualModal(true);\r\n  }\r\n\r\n  const handleCloseParent = () => {\r\n    setManualModal(false);\r\n    setUploadModal(false);\r\n  }\r\n\r\n  let handleCallback = (data) => {\r\n    //set object here too - this could be used for the image and manual modals\r\n    //data is what the child sent - now u can use that in the q&a modal\r\n    setDetectedObject(data);\r\n    // open the q&a modal, close parents\r\n    handleCloseParent();\r\n  }\r\n  \r\n  if (detectedObject) {\r\n    return (\r\n      <FetchModal detectedObject={detectedObject}/>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div className=\"welcomeScreen\">\r\n      {/* Take a Photo */}\r\n      <Button className=\"welcomeUpload\" variant=\"contained\" onClick={handleUploadModal}>Upload a Photo</Button>\r\n      <Button className=\"welcomeManual\" onClick={handleManualModal}>Manual Submission</Button>\r\n      <Modal\r\n        open={uploadModal}\r\n        onClose={handleCloseParent}\r\n      >\r\n        <div className=\"testModal\">\r\n          <ImageModalParent parentCallback={handleCallback} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={manualModal}\r\n        onClose={handleCloseParent}\r\n      >\r\n        <div>\r\n          <ManualModalParent parentCallback={handleCallback}/>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ImageModalParent(props) {\r\n  // let {parentCallback} = props;\r\n  // const [detectedObject, setDetectedObject] = useState();\r\n  let [selectedImage, setSelectedImage] = useState();\r\n  \r\n  // let handleSubmit = () => {\r\n  //   //this happens on success - send the detectedObject to the parent\r\n  //   parentCallback(detectedObject);\r\n  // }\r\n\r\n  let handleUpload = () => {\r\n      //    {/* image uploading would be here - select the image here somehow */}\r\n      // {/* do we just wanna put a fake image of choosing a picture? */}\r\n    setSelectedImage(defaultImage);\r\n  }\r\n\r\n  // if (detectedObject) {\r\n  //   return (\r\n  //     <div>\r\n  //       Is {detectedObject} the item you submitted?\r\n  //       <Button variant=\"contained\" onClick={handleSubmit}>Yes</Button>\r\n  //       <Button variant=\"contained\" onClick={() => setDetectedObject(null)}>No</Button>\r\n  //     </div>\r\n  //   )\r\n  // }\r\n  // default - no object detected yet\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" onClick={handleUpload}>\r\n        Select a picture\r\n      </Button>\r\n      <Link \r\n        to={{\r\n            pathname: \"/testAPI\",\r\n            state: { image: defaultImage }\r\n          }}\r\n        >\r\n          <Button variant=\"contained\">Upload</Button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ManualModalParent(props) {\r\n  let {parentCallback} = props;\r\n  const [detectedObject, setDetectedObject] = useState();\r\n    \r\n  let handleSubmit = () => {\r\n    //this happens on success - send the detectedObject to the parent\r\n    parentCallback(detectedObject);\r\n  }\r\n\r\n  // buttons don't submit unless you press submit\r\n  return (\r\n    <div className=\"manualModal\">\r\n      <form>\r\n        <p className=\"manualOne\"><Button variant=\"contained\" onClick={() => {setDetectedObject(\"bottles\")}}>Jugs or Bottles</Button></p>     \r\n        <p className=\"manualTwo\"><Button variant=\"contained\" onClick={() => {setDetectedObject(\"containers\")}}>Containers</Button></p>\r\n        <p className=\"manualThree\"><Button variant=\"contained\" onClick={() => {setDetectedObject(\"electronics\")}}>Electronics</Button></p>\r\n        <p className=\"manualFour\"><Button variant=\"contained\" onClick={() => {setDetectedObject(\"textiles\")}}>Textiles</Button></p>\r\n        <input className=\"manualEntry\" type = \"text\" name=\"other\" />\r\n        <div className=\"manualSubmit\">\r\n          <Button  variant=\"contained\" onClick={handleSubmit}>Submit</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function FetchModal(props) {\r\n  let {detectedObject} = props;\r\n\r\n  let currentObject = (detectedObject || props.history.location.state || \"box\"); // result from image api\r\n\r\n  let [init, setInit] = useState(false);\r\n  let [data, setData] = useState();\r\n  let predefined = [\"containers\", \"jugs\", \"bottles\", \"electronics\", \"propane tanks\"];\r\n\r\n  let fetchResults = (URL) => {\r\n    fetch(URL, {\r\n      method: 'GET',\r\n    })\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n      setData(json);\r\n      setInit(true);\r\n    })\r\n    .catch((e) => console.log(e));\r\n  }\r\n\r\n  let url = `https://data.edmonton.ca/resource/gtej-pcij.json?$where=material_title like '%25${currentObject}%25'`;\r\n  if (predefined.includes(currentObject)) {\r\n        //|| 'box') // COMMENT IN TO ACCESS QS FLOW\r\n\r\n    // go straight to question/answer flow\r\n    return (<QuestionModal detectedObject={currentObject}/>)\r\n  } else {\r\n    if (!init) {\r\n      fetchResults(url);\r\n    }\r\n  }\r\n\r\n  if (data && data.length === 1) {\r\n    // go to next... i dont think this works\r\n    history.push('/final');\r\n  }\r\n\r\n  if (!init) {\r\n    return (\r\n      <div>\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"resultOptions\">\r\n      <div className=\"resultOptionsScroll\">\r\n      {data && (data.length > 1) \r\n        && data.map((data, i) => {\r\n          return (\r\n            <Link \r\n                to={{\r\n                    pathname: \"/final\",\r\n                    state: { title: data[\"material_title\"], result: data[\"stream_title\"], info: data[\"special_instructions\"]}\r\n                  }}\r\n                  className=\"resultOptionsButton\"\r\n            >\r\n              <Button>\r\n                {data[\"material_title\"]}\r\n              </Button>\r\n            </Link>\r\n          )\r\n      })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction QuestionModal(props) {\r\n  let {detectedObject, parentCallback} = props;\r\n  let [result, setResult] = useState(null); // \"r\" or \"w\"\r\n  let [nextStep, setNextStep] = useState(); // 'follow up', 'next', or 'material'\r\n  let [materialType, setMaterialType] = useState();\r\n  let [materialStream, setMaterialStream] = useState();\r\n\r\n  // assuming these are the only options we will handle:\r\n  // container, jug, bottle, electronic, propane tanks, textiles\r\n  // other will get handled differently\r\n  let containerContent = [\r\n    \"Is the container empty and dry?\",\r\n    \"Please dry the container\"\r\n  ];\r\n\r\n  let jugContent = [\r\n    \"Is there a straw or lid?\",\r\n    \"Please separate the straw and lid and send them to waste\",\r\n    \"Is it less than 5 liters?\"\r\n  ]\r\n\r\n  if (materialStream) {\r\n    return (\r\n      <div>\r\n        We recommend: {materialStream}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //default\r\n  let content = (<div>Next results</div>)\r\n\r\n    // Qs for Item types (Step 1)\r\n    if (detectedObject === 'box' || detectedObject === 'containers') {\r\n      content = (\r\n        <div>\r\n          {containerContent[0]}\r\n          <Button variant=\"contained\" onClick={() => setNextStep('material')}>Yes</Button>\r\n          <Button variant=\"contained\" onClick={() => setNextStep('follow up')}>No</Button>\r\n        </div>\r\n      )\r\n      if (nextStep === 'follow up') {\r\n        content = (\r\n          <div>\r\n            {containerContent[1]}\r\n            <Button variant=\"contained\" onClick={() => setNextStep('material')}>All Done!</Button>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    else if (detectedObject === 'jugs' || detectedObject === 'bottles') {\r\n      content = (\r\n        <div>\r\n          {jugContent[0]}\r\n          <Button variant=\"contained\" onClick={() => setNextStep('follow up')}>Yes</Button>\r\n          <Button variant=\"contained\" onClick={() => setNextStep('next')}>No</Button>\r\n        </div>\r\n      ) \r\n      if (nextStep === 'follow up') {\r\n          content = (\r\n            <div>\r\n              {jugContent[1]}\r\n              <Button variant=\"contained\" onClick={() => setNextStep('next')}>All Done!</Button>\r\n            </div>\r\n          )\r\n      } if (nextStep === 'next') {\r\n          content = (\r\n            <div>\r\n              {jugContent[2]}\r\n              <Button variant=\"contained\" onClick={() => setNextStep('material')}>Yes</Button>\r\n              <Button variant=\"contained\" onClick={() => setResult('w')}>No</Button>\r\n            </div>\r\n          )\r\n        }\r\n    }\r\n    else if (detectedObject === 'electronics' || detectedObject === 'propane tanks') {\r\n      content = (\r\n        <div>\r\n          Look for the closest disposal center near you! (google maps?)\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      setNextStep('material');\r\n    }\r\n\r\n    //Material Qs\r\n    if (nextStep === 'material') {\r\n      content = (\r\n        <div>\r\n          What material is your item made of?\r\n          <Button variant=\"contained\" onClick={() => setMaterialType('glass')}>Glass</Button>\r\n          <Button variant=\"contained\" onClick={() => setMaterialType('plastic')}>Plastic</Button>\r\n          <Button variant=\"contained\" onClick={() => setResult('r')}>Metal</Button>\r\n          <Button variant=\"contained\" onClick={() => setMaterialType('paper')}>Paper</Button>\r\n          <Button variant=\"contained\" onClick={() => setResult('w')}>Styrofoam</Button>\r\n        </div>\r\n      ) \r\n      if (materialType === 'glass') {\r\n        content = (\r\n          <div>\r\n            Is it broken?\r\n            <Button variant=\"contained\" onClick={() => setResult('w')}>Yes</Button>\r\n            <Button variant=\"contained\" onClick={() => setResult('r')}>No</Button>\r\n          </div>\r\n        )\r\n      } else if (materialType === 'plastic') {\r\n        content = (\r\n          <div>\r\n            Please Enter the SPI Number. (form)\r\n          </div>\r\n        )\r\n      } else if (materialType === 'paper') {\r\n        content = (\r\n          <div>\r\n            Is there a wax or plastic coating?\r\n            <Button variant=\"contained\" onClick={() => setResult('w')}>Yes</Button>\r\n            <Button variant=\"contained\" onClick={() => setResult('r')}>No</Button>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    // This if statement is not working rn\r\n    if (result === ('r' || 'w')) {\r\n      <div>\r\n        Your {detectedObject} is {result}.\r\n      </div>\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Follow Up Questions: {detectedObject}</h1>\r\n      {content}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function FinalResult(props) {\r\n  // if passing through link\r\n  // <Link \r\n  //     to={{\r\n  //         pathname: \"/final\",\r\n  //         state: { title: ..., result: ..., info: ...}\r\n  //       }}\r\n  // >\r\n  // content here\r\n  // </Link>\r\n  let {title, result, info} = props.history.location.state;\r\n\r\n  console.log(result.includes(\"Recyc\"));\r\n\r\n  return (\r\n    <div className=\"finalScreen\">\r\n    <h3>\r\n      {result.includes(\"Recyc\") ? \"Your item is recyclable!\" : \"Your item is not recyclable\"}\r\n    </h3>\r\n    <div className=\"finalDesc\">\r\n      <h1>\r\n        {result}\r\n      </h1>\r\n      <body>\r\n        {info}\r\n      </body>\r\n    </div>\r\n    <div className=\"finalButton\">\r\n      <Link to=\"/home\">\r\n        Start Over\r\n      </Link>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {Button} from '@material-ui/core/';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ImageRecognition(props) {\r\n  let {image} = props.history.location.state; // image can be accessed here\r\n  let [selectedImage, setSelectedImage] = useState(image);\r\n  let [result, setResult] = useState(); // save result here after fetch\r\n  let [init, setInit] = useState(false);\r\n\r\n  let fetchResult = () => {\r\n    //fetch google result here\r\n    setResult(\"box\");\r\n    setInit(true);\r\n  }\r\n  if (!init) {\r\n    fetchResult();\r\n  }\r\n\r\n\r\n  if (result) {\r\n    return (\r\n      <div className=\"submittedPrompt\">\r\n        <div className=\"textSubmit\">\r\n         {result}\r\n         </div>\r\n        <Link \r\n            to={{\r\n                pathname: \"/fetching\",\r\n              }}\r\n        >\r\n          <div className=\"loginButton4\"></div>\r\n          <Button className=\"yesContainerStacked\">\r\n            Yes, Proceed\r\n          </Button>\r\n        </Link>\r\n        \r\n        <Button className=\"noContainerStacked\" onclick=\"../home\">\r\n          No, let's try again\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      Loading...\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageRecognition;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport history from './history';\r\nimport './App.css';\r\n// import { createBrowserHistory as history } from 'history';\r\nimport Login from './Login';\r\nimport Home, {FinalResult, FetchModal} from './Home';\r\nimport ImageRecognition from './ImageRecognition'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={history}>\r\n        <div className=\"App\">\r\n              <Switch>\r\n              <Route exact path=\"/\" component={Login} />\r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/final\" component={FinalResult} />\r\n              <Route path=\"/testAPI\" component={ImageRecognition} />\r\n              <Route path=\"/fetching\" component={FetchModal} />\r\n              </Switch>\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}