{"version":3,"sources":["history.js","Login.jsx","box.png","Home.jsx","ImageRecognition.jsx","App.js","index.js"],"names":["createBrowserHistory","Login","props","noValidate","autoComplete","TextField","id","label","to","Button","variant","ImageModalParent","useState","selectedImage","setSelectedImage","className","src","onClick","defaultImage","pathname","state","image","ManualModalParent","parentCallback","detectedObject","setDetectedObject","type","name","FetchModal","currentObject","history","location","init","setInit","data","setData","url","includes","QuestionModal","fetch","method","then","res","json","catch","e","console","log","length","push","map","i","title","result","info","setResult","nextStep","setNextStep","materialType","setMaterialType","materialStream","containerContent","jugContent","content","FinalResult","Home","uploadModal","setUploadModal","manualModal","setManualModal","handleCloseParent","handleCallback","Modal","open","onClose","ImageRecognition","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"oNAEeA,gB,wBCkBAC,MAhBf,SAAeC,GAEb,OACE,wCAEE,uBAAMC,YAAU,EAACC,aAAa,MAA9B,UACE,cAACC,EAAA,EAAD,CAAWC,GAAG,OAAOC,MAAM,aAC3B,cAACF,EAAA,EAAD,CAAWC,GAAG,OAAOC,MAAM,gBAE7B,cAAC,IAAD,CAAMC,GAAG,QAAT,SACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAhB,yB,iBCdS,MAA0B,gCCiEzC,SAASC,EAAiBT,GAAO,MAESU,qBAFT,mBAE1BC,EAF0B,KAEXC,EAFW,KAU/B,OACE,sBAAKC,UAAU,cAAf,UAGGF,EACC,qBAAKE,UAAU,mBAAf,SACE,qBAAKC,IAAKH,MAGZ,cAACJ,EAAA,EAAD,CAAQM,UAAU,oBAAoBL,QAAQ,YAAYO,QAf7C,WAGjBH,EAAiBI,IAYb,8BAIF,cAAC,IAAD,CACEV,GAAI,CACAW,SAAU,WACVC,MAAO,CAAEC,MAAOH,IAHtB,SAMI,cAACT,EAAA,EAAD,CAAQM,UAAU,oBAAoBL,QAAQ,YAA9C,yBAMV,SAASY,EAAkBpB,GAAQ,IAC5BqB,EAAkBrB,EAAlBqB,eAD2B,EAEYX,qBAFZ,mBAEzBY,EAFyB,KAETC,EAFS,KAUhC,OACE,qBAAKV,UAAU,cAAf,SACE,iCACE,mBAAGA,UAAU,YAAb,SAAyB,cAACN,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,WAAOQ,EAAkB,YAA9D,+BACzB,mBAAGV,UAAU,YAAb,SAAyB,cAACN,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,WAAOQ,EAAkB,eAA9D,0BACzB,mBAAGV,UAAU,cAAb,SAA2B,cAACN,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,WAAOQ,EAAkB,gBAA9D,2BAC3B,mBAAGV,UAAU,aAAb,SAA0B,cAACN,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,WAAOQ,EAAkB,aAA9D,wBAC1B,uBAAOV,UAAU,cAAcW,KAAO,OAAOC,KAAK,UAClD,qBAAKZ,UAAU,eAAf,SACE,cAACN,EAAA,EAAD,CAASC,QAAQ,YAAYO,QAflB,WAEjBM,EAAeC,IAaT,2BAOH,SAASI,EAAW1B,GAAQ,IAG7B2B,EAFmB3B,EAAlBsB,gBAEkCtB,EAAM4B,QAAQC,SAASX,OAAS,MAHvC,EAKVR,oBAAS,GALC,mBAK3BoB,EAL2B,KAKrBC,EALqB,OAMVrB,qBANU,mBAM3BsB,EAN2B,KAMrBC,EANqB,KAqB5BC,EAAG,0FAAsFP,EAAtF,QACP,MAfiB,CAAC,aAAc,OAAQ,UAAW,cAAe,iBAenDQ,SAASR,GAId,cAACS,EAAD,CAAed,eAAgBK,KAElCG,GAlBLO,MAmBeH,EAnBJ,CACTI,OAAQ,QAETC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACE,GACLR,EAAQQ,GACRV,GAAQ,MAETW,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MAexBX,GAAwB,IAAhBA,EAAKc,QAEflB,EAAQmB,KAAK,UAGVjB,EASH,qBAAKjB,UAAU,gBAAf,SACE,qBAAKA,UAAU,sBAAf,SACCmB,GAASA,EAAKc,OAAS,GACnBd,EAAKgB,KAAI,SAAChB,EAAMiB,GACjB,OACE,cAAC,IAAD,CACI3C,GAAI,CACAW,SAAU,SACVC,MAAO,CAAEgC,MAAOlB,EAAI,eAAoBmB,OAAQnB,EAAI,aAAkBoB,KAAMpB,EAAI,uBAElFnB,UAAU,sBALhB,SAOE,cAACN,EAAA,EAAD,UACGyB,EAAI,0BApBf,8CA8BN,SAASI,EAAcpC,GAAQ,IACxBsB,EAAkCtB,EAAlCsB,eADuB,GACWtB,EAAlBqB,eACKX,mBAAS,OAFP,mBAEf2C,GAFe,aAGE3C,qBAHF,mBAGvB4C,EAHuB,KAGbC,EAHa,OAIU7C,qBAJV,mBAIvB8C,EAJuB,KAITC,EAJS,OAKc/C,qBALd,mBAKvBgD,EALuB,KAUxBC,GAVwB,KAUL,CACrB,kCACA,6BAGEC,EAAa,CACf,2BACA,2DACA,6BAGF,GAAIF,EACF,OACE,iDACiBA,KAMrB,IAAIG,EAAW,+CAoGf,MAjGyB,QAAnBvC,GAA+C,eAAnBA,GAC9BuC,EACE,gCACGF,EAAiB,GAClB,cAACpD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMwC,EAAY,aAAvD,iBACA,cAAChD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMwC,EAAY,cAAvD,mBAGa,cAAbD,IACFO,EACE,gCACGF,EAAiB,GAClB,cAACpD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMwC,EAAY,aAAvD,4BAKoB,SAAnBjC,GAAgD,YAAnBA,GACpCuC,EACE,gCACGD,EAAW,GACZ,cAACrD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMwC,EAAY,cAAvD,iBACA,cAAChD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMwC,EAAY,SAAvD,mBAGa,cAAbD,IACAO,EACE,gCACGD,EAAW,GACZ,cAACrD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMwC,EAAY,SAAvD,2BAGW,SAAbD,IACFO,EACE,gCACGD,EAAW,GACZ,cAACrD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMwC,EAAY,aAAvD,iBACA,cAAChD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMsC,EAAU,MAArD,qBAKkB,gBAAnB/B,GAAuD,kBAAnBA,EAC3CuC,EACE,gGAMFN,EAAY,YAIG,aAAbD,IACFO,EACE,sEAEE,cAACtD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAM0C,EAAgB,UAA3D,mBACA,cAAClD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAM0C,EAAgB,YAA3D,qBACA,cAAClD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMsC,EAAU,MAArD,mBACA,cAAC9C,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAM0C,EAAgB,UAA3D,mBACA,cAAClD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMsC,EAAU,MAArD,0BAGiB,UAAjBG,EACFK,EACE,gDAEE,cAACtD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMsC,EAAU,MAArD,iBACA,cAAC9C,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMsC,EAAU,MAArD,mBAGsB,YAAjBG,EACTK,EACE,sEAIwB,UAAjBL,IACTK,EACE,qEAEE,cAACtD,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMsC,EAAU,MAArD,iBACA,cAAC9C,EAAA,EAAD,CAAQC,QAAQ,YAAYO,QAAS,kBAAMsC,EAAU,MAArD,qBAcR,gCACE,uDAA0B/B,KACzBuC,KAKA,SAASC,EAAY9D,GAAO,MAULA,EAAM4B,QAAQC,SAASX,MAAvCiC,GAVqB,EAU5BD,MAV4B,EAUrBC,QAAQC,EAVa,EAUbA,KAIpB,OAFAR,QAAQC,IAAIM,EAAOhB,SAAS,UAG1B,sBAAKtB,UAAU,cAAf,UACA,6BACGsC,EAAOhB,SAAS,SAAW,2BAA6B,gCAE3D,sBAAKtB,UAAU,YAAf,UACE,6BACGsC,IAEH,+BACGC,OAGL,qBAAKvC,UAAU,cAAf,SACE,cAAC,IAAD,CAAMP,GAAG,QAAT,6BAQSyD,MA3Wf,SAAc/D,GAAO,MAEmBU,oBAAS,GAF5B,mBAEZsD,EAFY,KAECC,EAFD,OAGmBvD,oBAAS,GAH5B,mBAGZwD,EAHY,KAGCC,EAHD,OAIyBzD,mBAAS,MAJlC,mBAIZY,EAJY,KAIIC,EAJJ,KAcb6C,EAAoB,WACxBD,GAAe,GACfF,GAAe,IAGbI,EAAiB,SAACrC,GAGpBT,EAAkBS,GAElBoC,KAGF,OAAI9C,EAEA,cAACI,EAAD,CAAYJ,eAAgBA,IAK9B,sBAAKT,UAAU,gBAAf,UAEE,cAACN,EAAA,EAAD,CAAQM,UAAU,gBAAgBL,QAAQ,YAAYO,QA9BhC,WACxBkD,GAAe,IA6Bb,4BACA,cAAC1D,EAAA,EAAD,CAAQM,UAAU,gBAAgBE,QA3BZ,WACxBoD,GAAe,IA0Bb,+BACA,cAACG,EAAA,EAAD,CACEC,KAAMP,EACNQ,QAASJ,EAFX,SAIE,8BACE,cAAC3D,EAAD,CAAkBY,eAAgBgD,QAGtC,cAACC,EAAA,EAAD,CACEC,KAAML,EACNM,QAASJ,EAFX,SAIE,8BACE,cAAChD,EAAD,CAAmBC,eAAgBgD,YCV9BI,MA5Cf,SAA0BzE,GAAQ,IAC3BmB,EAASnB,EAAM4B,QAAQC,SAASX,MAAhCC,MAD0B,EAEST,mBAASS,GAFlB,gCAGLT,sBAHK,mBAG1ByC,EAH0B,KAGlBE,EAHkB,OAIT3C,oBAAS,GAJA,mBAI1BoB,EAJ0B,KAIpBC,EAJoB,KAgB/B,OALKD,IAHHuB,EAAU,OACVtB,GAAQ,IAONoB,EAEA,8EAC8CA,EAC5C,cAAC,IAAD,CACI7C,GAAI,CACAW,SAAU,aAFlB,SAKE,cAACV,EAAA,EAAD,6BAKF,cAACA,EAAA,EAAD,qCAQJ,8CChBWmE,MAhBf,WACE,OACE,cAAC,IAAD,CAAQ9C,QAASA,EAAjB,SACI,qBAAKf,UAAU,MAAf,SACM,eAAC,IAAD,WACA,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,IAAIC,UAAW9E,IACjC,cAAC,IAAD,CAAO6E,KAAK,QAAQC,UAAWd,IAC/B,cAAC,IAAD,CAAOa,KAAK,SAASC,UAAWf,IAChC,cAAC,IAAD,CAAOc,KAAK,WAAWC,UAAWJ,IAClC,cAAC,IAAD,CAAOG,KAAK,YAAYC,UAAWnD,YCbjDoD,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.279244f6.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { useState } from \"react\";\nimport {TextField, Button} from '@material-ui/core/';\nimport {Link } from \"react-router-dom\";\n\nfunction Login(props) {\n\n  return(\n    <div>\n      LOGIN\n      <form noValidate autoComplete=\"off\">\n        <TextField id=\"user\" label=\"Username\" />\n        <TextField id=\"pass\" label=\"Password\" />\n      </form>\n      <Link to=\"/home\">\n      <Button variant=\"contained\">Login</Button>\n      </Link>\n    </div>\n  )\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/box.1c939293.png\";","import React, { useState } from \"react\";\nimport {Button, Modal, Typography} from '@material-ui/core/';\nimport {Link} from \"react-router-dom\";\nimport './App.css';\nimport history from './history';\nimport defaultImage from './box.png';\n\nfunction Home(props) {\n  //closed by default\n  const [uploadModal, setUploadModal] = useState(false);\n  const [manualModal, setManualModal] = useState(false);\n  const [detectedObject, setDetectedObject] = useState(null);\n\n  const handleUploadModal = () => {\n    setUploadModal(true);\n  }\n\n  const handleManualModal = () => {\n    setManualModal(true);\n  }\n\n  const handleCloseParent = () => {\n    setManualModal(false);\n    setUploadModal(false);\n  }\n\n  let handleCallback = (data) => {\n    //set object here too - this could be used for the image and manual modals\n    //data is what the child sent - now u can use that in the q&a modal\n    setDetectedObject(data);\n    // open the q&a modal, close parents\n    handleCloseParent();\n  }\n  \n  if (detectedObject) {\n    return (\n      <FetchModal detectedObject={detectedObject}/>\n    )\n  }\n\n  return(\n    <div className=\"welcomeScreen\">\n      {/* Take a Photo */}\n      <Button className=\"welcomeUpload\" variant=\"contained\" onClick={handleUploadModal}>Upload a Photo</Button>\n      <Button className=\"welcomeManual\" onClick={handleManualModal}>Manual Submission</Button>\n      <Modal\n        open={uploadModal}\n        onClose={handleCloseParent}\n      >\n        <div>\n          <ImageModalParent parentCallback={handleCallback} />\n        </div>\n      </Modal>\n      <Modal\n        open={manualModal}\n        onClose={handleCloseParent}\n      >\n        <div>\n          <ManualModalParent parentCallback={handleCallback}/>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nfunction ImageModalParent(props) {\n  // modal for UPLOADING image\n  let [selectedImage, setSelectedImage] = useState();\n\n  let handleUpload = () => {\n      //    {/* image uploading would be here - select the image here somehow */}\n      // {/* do we just wanna put a fake image of choosing a picture? */}\n    setSelectedImage(defaultImage);\n  }\n\n  return (\n    <div className=\"uploadModal\">\n      \n      {/* preview image */}\n      {selectedImage ? (\n        <div className=\"uploadModalImage\">\n          <img src={selectedImage}/>\n        </div>\n      ) : (\n        <Button className=\"uploadModalSelect\" variant=\"contained\" onClick={handleUpload}>\n          Select a picture\n        </Button>\n      )}\n      <Link \n        to={{\n            pathname: \"/testAPI\",\n            state: { image: defaultImage }\n          }}\n        >\n          <Button className=\"uploadModalUpload\" variant=\"contained\">Upload</Button>\n      </Link>\n    </div>\n  )\n}\n\nfunction ManualModalParent(props) {\n  let {parentCallback} = props;\n  const [detectedObject, setDetectedObject] = useState();\n    \n  let handleSubmit = () => {\n    //this happens on success - send the detectedObject to the parent\n    parentCallback(detectedObject);\n  }\n\n  // buttons don't submit unless you press submit\n  return (\n    <div className=\"manualModal\">\n      <form>\n        <p className=\"manualOne\"><Button variant=\"contained\" onClick={() => {setDetectedObject(\"bottles\")}}>Jugs or Bottles</Button></p>     \n        <p className=\"manualTwo\"><Button variant=\"contained\" onClick={() => {setDetectedObject(\"containers\")}}>Containers</Button></p>\n        <p className=\"manualThree\"><Button variant=\"contained\" onClick={() => {setDetectedObject(\"electronics\")}}>Electronics</Button></p>\n        <p className=\"manualFour\"><Button variant=\"contained\" onClick={() => {setDetectedObject(\"textiles\")}}>Textiles</Button></p>\n        <input className=\"manualEntry\" type = \"text\" name=\"other\" />\n        <div className=\"manualSubmit\">\n          <Button  variant=\"contained\" onClick={handleSubmit}>Submit</Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport function FetchModal(props) {\n  let {detectedObject} = props;\n\n  let currentObject = (detectedObject || props.history.location.state || \"box\"); // result from image api\n\n  let [init, setInit] = useState(false);\n  let [data, setData] = useState();\n  let predefined = [\"containers\", \"jugs\", \"bottles\", \"electronics\", \"propane tanks\"];\n\n  let fetchResults = (URL) => {\n    fetch(URL, {\n      method: 'GET',\n    })\n    .then(res => res.json())\n    .then((json) => {\n      setData(json);\n      setInit(true);\n    })\n    .catch((e) => console.log(e));\n  }\n\n  let url = `https://data.edmonton.ca/resource/gtej-pcij.json?$where=material_title like '%25${currentObject}%25'`;\n  if (predefined.includes(currentObject)) {\n        //|| 'box') // COMMENT IN TO ACCESS QS FLOW\n\n    // go straight to question/answer flow\n    return (<QuestionModal detectedObject={currentObject}/>)\n  } else {\n    if (!init) {\n      fetchResults(url);\n    }\n  }\n\n  if (data && data.length === 1) {\n    // go to next... i dont think this works\n    history.push('/final');\n  }\n\n  if (!init) {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"resultOptions\">\n      <div className=\"resultOptionsScroll\">\n      {data && (data.length > 1) \n        && data.map((data, i) => {\n          return (\n            <Link \n                to={{\n                    pathname: \"/final\",\n                    state: { title: data[\"material_title\"], result: data[\"stream_title\"], info: data[\"special_instructions\"]}\n                  }}\n                  className=\"resultOptionsButton\"\n            >\n              <Button>\n                {data[\"material_title\"]}\n              </Button>\n            </Link>\n          )\n      })}\n      </div>\n    </div>\n  )\n}\n\nfunction QuestionModal(props) {\n  let {detectedObject, parentCallback} = props;\n  let [result, setResult] = useState(null); // \"r\" or \"w\"\n  let [nextStep, setNextStep] = useState(); // 'follow up', 'next', or 'material'\n  let [materialType, setMaterialType] = useState();\n  let [materialStream, setMaterialStream] = useState();\n\n  // assuming these are the only options we will handle:\n  // container, jug, bottle, electronic, propane tanks, textiles\n  // other will get handled differently\n  let containerContent = [\n    \"Is the container empty and dry?\",\n    \"Please dry the container\"\n  ];\n\n  let jugContent = [\n    \"Is there a straw or lid?\",\n    \"Please separate the straw and lid and send them to waste\",\n    \"Is it less than 5 liters?\"\n  ]\n\n  if (materialStream) {\n    return (\n      <div>\n        We recommend: {materialStream}\n      </div>\n    )\n  }\n\n  //default\n  let content = (<div>Next results</div>)\n\n    // Qs for Item types (Step 1)\n    if (detectedObject === 'box' || detectedObject === 'containers') {\n      content = (\n        <div>\n          {containerContent[0]}\n          <Button variant=\"contained\" onClick={() => setNextStep('material')}>Yes</Button>\n          <Button variant=\"contained\" onClick={() => setNextStep('follow up')}>No</Button>\n        </div>\n      )\n      if (nextStep === 'follow up') {\n        content = (\n          <div>\n            {containerContent[1]}\n            <Button variant=\"contained\" onClick={() => setNextStep('material')}>All Done!</Button>\n          </div>\n        )\n      }\n    }\n    else if (detectedObject === 'jugs' || detectedObject === 'bottles') {\n      content = (\n        <div>\n          {jugContent[0]}\n          <Button variant=\"contained\" onClick={() => setNextStep('follow up')}>Yes</Button>\n          <Button variant=\"contained\" onClick={() => setNextStep('next')}>No</Button>\n        </div>\n      ) \n      if (nextStep === 'follow up') {\n          content = (\n            <div>\n              {jugContent[1]}\n              <Button variant=\"contained\" onClick={() => setNextStep('next')}>All Done!</Button>\n            </div>\n          )\n      } if (nextStep === 'next') {\n          content = (\n            <div>\n              {jugContent[2]}\n              <Button variant=\"contained\" onClick={() => setNextStep('material')}>Yes</Button>\n              <Button variant=\"contained\" onClick={() => setResult('w')}>No</Button>\n            </div>\n          )\n        }\n    }\n    else if (detectedObject === 'electronics' || detectedObject === 'propane tanks') {\n      content = (\n        <div>\n          Look for the closest disposal center near you! (google maps?)\n        </div>\n      )\n    }\n    else {\n      setNextStep('material');\n    }\n\n    //Material Qs\n    if (nextStep === 'material') {\n      content = (\n        <div>\n          What material is your item made of?\n          <Button variant=\"contained\" onClick={() => setMaterialType('glass')}>Glass</Button>\n          <Button variant=\"contained\" onClick={() => setMaterialType('plastic')}>Plastic</Button>\n          <Button variant=\"contained\" onClick={() => setResult('r')}>Metal</Button>\n          <Button variant=\"contained\" onClick={() => setMaterialType('paper')}>Paper</Button>\n          <Button variant=\"contained\" onClick={() => setResult('w')}>Styrofoam</Button>\n        </div>\n      ) \n      if (materialType === 'glass') {\n        content = (\n          <div>\n            Is it broken?\n            <Button variant=\"contained\" onClick={() => setResult('w')}>Yes</Button>\n            <Button variant=\"contained\" onClick={() => setResult('r')}>No</Button>\n          </div>\n        )\n      } else if (materialType === 'plastic') {\n        content = (\n          <div>\n            Please Enter the SPI Number. (form)\n          </div>\n        )\n      } else if (materialType === 'paper') {\n        content = (\n          <div>\n            Is there a wax or plastic coating?\n            <Button variant=\"contained\" onClick={() => setResult('w')}>Yes</Button>\n            <Button variant=\"contained\" onClick={() => setResult('r')}>No</Button>\n          </div>\n        )\n      }\n    }\n\n    // This if statement is not working rn\n    if (result === ('r' || 'w')) {\n      <div>\n        Your {detectedObject} is {result}.\n      </div>\n    }\n\n  return (\n    <div>\n      <h1>Follow Up Questions: {detectedObject}</h1>\n      {content}\n    </div>\n  )\n}\n\nexport function FinalResult(props) {\n  // if passing through link\n  // <Link \n  //     to={{\n  //         pathname: \"/final\",\n  //         state: { title: ..., result: ..., info: ...}\n  //       }}\n  // >\n  // content here\n  // </Link>\n  let {title, result, info} = props.history.location.state;\n\n  console.log(result.includes(\"Recyc\"));\n\n  return (\n    <div className=\"finalScreen\">\n    <h3>\n      {result.includes(\"Recyc\") ? \"Your item is recyclable!\" : \"Your item is not recyclable\"}\n    </h3>\n    <div className=\"finalDesc\">\n      <h1>\n        {result}\n      </h1>\n      <body>\n        {info}\n      </body>\n    </div>\n    <div className=\"finalButton\">\n      <Link to=\"/home\">\n        Start Over\n      </Link>\n    </div>\n    </div>\n  )\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport {Button} from '@material-ui/core/';\nimport {Link} from \"react-router-dom\";\n\nfunction ImageRecognition(props) {\n  let {image} = props.history.location.state; // image can be accessed here\n  let [selectedImage, setSelectedImage] = useState(image);\n  let [result, setResult] = useState(); // save result here after fetch\n  let [init, setInit] = useState(false);\n\n  let fetchResult = () => {\n    //fetch google result here\n    setResult(\"box\");\n    setInit(true);\n  }\n  if (!init) {\n    fetchResult();\n  }\n\n\n  if (result) {\n    return (\n      <div>\n        Your photo has been recognized. Your item: {result}\n        <Link \n            to={{\n                pathname: \"/fetching\",\n              }}\n        >\n          <Button>\n            Yes, Proceed\n          </Button>\n        </Link>\n        \n        <Button>\n          No, let's try again\n        </Button>\n      </div>\n    )\n  }\n\n  return(\n    <div>\n      Loading...\n    </div>\n  )\n}\n\nexport default ImageRecognition;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { Route, Switch } from \"react-router-dom\";\nimport history from './history';\nimport './App.css';\n// import { createBrowserHistory as history } from 'history';\nimport Login from './Login';\nimport Home, {FinalResult, FetchModal} from './Home';\nimport ImageRecognition from './ImageRecognition'\n\nfunction App() {\n  return (\n    <Router history={history}>\n        <div className=\"App\">\n              <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/home\" component={Home} />\n              <Route path=\"/final\" component={FinalResult} />\n              <Route path=\"/testAPI\" component={ImageRecognition} />\n              <Route path=\"/fetching\" component={FetchModal} />\n              </Switch>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}