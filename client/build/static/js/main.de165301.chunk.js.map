{"version":3,"sources":["Login.jsx","Home.jsx","App.js","index.js"],"names":["Login","props","noValidate","autoComplete","TextField","id","label","to","Button","variant","ImageModalParent","parentCallback","useState","detectedObject","setDetectedObject","onClick","ManualModalParent","type","name","QuestionModal","materialModal","setMaterialModal","finishButton","content","Modal","open","onClose","className","MaterialModal","Home","uploadModal","setUploadModal","manualModal","setManualModal","questionModal","setQuestionModal","handleCloseParent","handleCloseChild","handleCallback","data","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de165301.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {TextField, Button} from '@material-ui/core/';\nimport {Link } from \"react-router-dom\";\n\nfunction Login(props) {\n\n  return(\n    <div>\n      LOGIN!!\n      <form noValidate autoComplete=\"off\">\n        <TextField id=\"user\" label=\"Username\" />\n        <TextField id=\"pass\" label=\"Password\" />\n      </form>\n      <Link to=\"/home\">\n      <Button variant=\"contained\">Login</Button>\n      </Link>\n    </div>\n  )\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport {Button, Modal} from '@material-ui/core/';\nimport {Link} from \"react-router-dom\";\nimport './App.css';\n\nfunction Home(props) {\n  //closed by default\n  const [uploadModal, setUploadModal] = useState(false);\n  const [manualModal, setManualModal] = useState(false);\n  const [questionModal, setQuestionModal] = useState(false);\n  const [detectedObject, setDetectedObject] = useState();\n\n  const handleUploadModal = () => {\n    setUploadModal(true);\n  }\n\n  const handleManualModal = () => {\n    setManualModal(true);\n  }\n\n  const handleCloseParent = () => {\n    setManualModal(false);\n    setUploadModal(false);\n  }\n\n  const handleCloseChild = () => {\n    setQuestionModal(false);\n  }\n\n  let handleCallback = (data) => {\n    //set object here too - this could be used for the image and manual modals\n    //data is what the child sent - now u can use that in the q&a modal\n    setDetectedObject(data);\n    // open the q&a modal, close parents\n    handleCloseParent();\n    setQuestionModal(true);\n\t} \n\n  return(\n    <div>\n      <Link to=\"/\">\n        <Button variant=\"contained\">Logout</Button>\n      </Link>\n      Home\n      <Button variant=\"contained\" onClick={handleUploadModal}>Upload pic</Button>\n      <Button variant=\"contained\" onClick={handleManualModal}>Manual</Button>\n      <Modal\n        open={uploadModal}\n        onClose={handleCloseParent}\n      >\n        <div className=\"testModal\">\n          <ImageModalParent parentCallback={handleCallback} />\n        </div>\n      </Modal>\n      <Modal\n        open={manualModal}\n        onClose={handleCloseParent}\n      >\n        <div className=\"testModal\">\n          <ManualModalParent parentCallback={handleCallback}/>\n        </div>\n      </Modal>\n      <Modal\n        open={questionModal}\n        onClose={handleCloseChild}\n      >\n        <div className=\"testModal\">\n          <QuestionModal detectedObject={detectedObject} parentCallback={handleCloseChild}/>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nfunction ImageModalParent(props) {\n  let {parentCallback} = props;\n  const [detectedObject, setDetectedObject] = useState();\n  \n  let handleSubmit = () => {\n    //this happens on success - send the detectedObject to the parent\n    parentCallback(detectedObject);\n  }\n\n  let handleUpload = () => {\n    // upload the image to the google thing, get the result\n    //set the detected object below to the state\n    setDetectedObject('box');\n  }\n  if (detectedObject) {\n    return (\n      <div>\n        Is {detectedObject} the item you submitted?\n        <Button variant=\"contained\" onClick={handleSubmit}>Yes</Button>\n        <Button variant=\"contained\" onClick={() => setDetectedObject(null)}>No</Button>\n      </div>\n    )\n  }\n  // default - no object detected yet\n  return (\n    <div>\n      Upload picture (google cloud)\n      {/* image uploading would be here */}\n      <Button variant=\"contained\" onClick={handleUpload}>Upload</Button>\n    </div>\n  )\n}\n\nfunction ManualModalParent(props) {\n  let {parentCallback} = props;\n  const [detectedObject, setDetectedObject] = useState();\n    \n  let handleSubmit = () => {\n    //this happens on success - send the detectedObject to the parent\n    parentCallback(detectedObject);\n  }\n\n  return (\n    <div>\n      What is your item?\n      <form>\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Bottle\")}}>Jugs or Bottles</Button></p>     \n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Containers\")}}>Containers</Button></p>\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Textiles\")}}>Textiles</Button></p>\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"Electronics\")}}>Electronics</Button></p>\n      <label>\n          Other: \n            <input type = \"text\" name=\"other\" />\n      </label>\n        <Button variant=\"contained\" onClick={handleSubmit}>Submit</Button>\n      </form>\n    </div>\n  )\n}\n\n// the styling for questions can go here for now?\nfunction QuestionModal(props) {\n  let {detectedObject, parentCallback} = props;\n  let [result, setResult] = useState(); // \"R\" or \"W\"\n  let [materialModal, setMaterialModal] = useState(false);\n\n  // assuming these are the only options we will handle:\n  // container, jug, bottle, electronic, propane tanks\n  // other will get handled differently\n  let containerContent = [\n    \"Is the container empty and dry?\",\n    \"Please dry the container\"\n  ];\n\n  let jugContent = [\n    \"Is there a straw or lid?\",\n    \"Please separate the straw and lid and send them to waste\",\n    \"Is it less than 5 liters?\"\n  ]\n\n  // button to go to next step\n  let finishButton = (\n    <Button variant=\"contained\" onClick={() => setMaterialModal(true)}>Finish</Button>\n  )\n\n  //default\n  let content = (<div>Next results</div>)\n\n  if (detectedObject === 'box') {\n    content = (\n      <div>\n        {containerContent[0]}\n        {/* when buttons are clicked, should go to next page */}\n        <Button variant=\"contained\">Yes</Button>\n        <Button variant=\"contained\">No</Button>\n        {finishButton}\n      </div>\n    )\n  }\n\n  if (detectedObject === 'jug' || detectedObject === 'bottle') {\n    content = (\n      <div>\n        {jugContent[0]}\n        <Button variant=\"contained\">Yes</Button>\n        <Button variant=\"contained\">No</Button>\n        {finishButton}\n      </div>\n    )\n  }\n\n  if (detectedObject === 'electronic' || detectedObject === 'propane tank') {\n    content = (\n      <div>\n        Look for the closest disposal center near you! (google maps?)\n        {finishButton}\n      </div>\n    )\n  }\n\n  // why are we asking what material is this?\n\n  return (\n    <div>\n      <h1>Follow Up Questions: {detectedObject}</h1>\n      {content}\n      <Modal\n        open={materialModal}\n        onClose={parentCallback}\n      >\n        <div className=\"testModal\">\n          <MaterialModal detectedObject={detectedObject}/>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\n// The API calls can go here for now? We can rearrange stuff later\nfunction MaterialModal(props) {\n  let {detectedObject} = props;\n\n  return (\n    <div>\n      something\n    </div>\n  )\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { Route, Switch } from \"react-router-dom\";\nimport './App.css';\n// import { createBrowserHistory as history } from 'history';\nimport Login from './Login';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"App\">\n              <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/home\" component={Home} />\n              </Switch>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}