{"version":3,"sources":["history.js","Login.jsx","box.png","Home.jsx","ImageRecognition.jsx","App.js","index.js"],"names":["createBrowserHistory","Login","props","noValidate","autoComplete","TextField","id","label","to","Button","variant","ImageModalParent","useState","setSelectedImage","onClick","defaultImage","pathname","state","image","ManualModalParent","parentCallback","detectedObject","setDetectedObject","type","name","FetchModal","currentObject","history","location","includes","QuestionModal","result","setResult","nextStep","setNextStep","materialType","setMaterialType","materialStream","containerContent","jugContent","content","className","console","log","FinalResult","title","info","Home","uploadModal","setUploadModal","manualModal","setManualModal","handleCloseParent","handleCallback","data","Modal","open","onClose","ImageRecognition","init","setInit","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c6c66ad.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { useState } from \"react\";\r\nimport {TextField, Button} from '@material-ui/core/';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n\r\n  return(\r\n    <div>\r\n      LOGIN\r\n      <form noValidate autoComplete=\"off\">\r\n        <TextField id=\"user\" label=\"Username\" />\r\n        <TextField id=\"pass\" label=\"Password\" />\r\n      </form>\r\n      <Link to=\"/home\">\r\n      <Button variant=\"contained\">Login</Button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/box.1c939293.png\";","import React, { useState } from \"react\";\r\nimport {Button, Modal} from '@material-ui/core/';\r\nimport {Link} from \"react-router-dom\";\r\nimport './App.css';\r\nimport history from './history';\r\nimport defaultImage from './box.png';\r\nimport PlasticForm from './PlasticForm';\r\n\r\nfunction Home(props) {\r\n  //closed by default\r\n  const [uploadModal, setUploadModal] = useState(false);\r\n  const [manualModal, setManualModal] = useState(false);\r\n  const [detectedObject, setDetectedObject] = useState(null);\r\n\r\n  const handleUploadModal = () => {\r\n    setUploadModal(true);\r\n  }\r\n\r\n  const handleManualModal = () => {\r\n    setManualModal(true);\r\n  }\r\n\r\n  const handleCloseParent = () => {\r\n    setManualModal(false);\r\n    setUploadModal(false);\r\n  }\r\n\r\n  let handleCallback = (data) => {\r\n    //set object here too - this could be used for the image and manual modals\r\n    //data is what the child sent - now u can use that in the q&a modal\r\n    setDetectedObject(data);\r\n    // open the q&a modal, close parents\r\n    handleCloseParent();\r\n  }\r\n  \r\n  if (detectedObject) {\r\n    return (\r\n      <FetchModal detectedObject={detectedObject}/>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Link to=\"/\">\r\n        <Button variant=\"contained\">Logout</Button>\r\n      </Link>\r\n      Home\r\n      <Button variant=\"contained\" onClick={handleUploadModal}>Upload pic</Button>\r\n      <Button variant=\"contained\" onClick={handleManualModal}>Manual</Button>\r\n      <Modal\r\n        open={uploadModal}\r\n        onClose={handleCloseParent}\r\n      >\r\n        <div className=\"testModal\">\r\n          <ImageModalParent parentCallback={handleCallback} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={manualModal}\r\n        onClose={handleCloseParent}\r\n      >\r\n        <div className=\"testModal\">\r\n          <ManualModalParent parentCallback={handleCallback}/>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ImageModalParent(props) {\r\n  // let {parentCallback} = props;\r\n  // const [detectedObject, setDetectedObject] = useState();\r\n  let [selectedImage, setSelectedImage] = useState();\r\n  \r\n  // let handleSubmit = () => {\r\n  //   //this happens on success - send the detectedObject to the parent\r\n  //   parentCallback(detectedObject);\r\n  // }\r\n\r\n  let handleUpload = () => {\r\n      //    {/* image uploading would be here - select the image here somehow */}\r\n      // {/* do we just wanna put a fake image of choosing a picture? */}\r\n    setSelectedImage(defaultImage);\r\n  }\r\n\r\n  // if (detectedObject) {\r\n  //   return (\r\n  //     <div>\r\n  //       Is {detectedObject} the item you submitted?\r\n  //       <Button variant=\"contained\" onClick={handleSubmit}>Yes</Button>\r\n  //       <Button variant=\"contained\" onClick={() => setDetectedObject(null)}>No</Button>\r\n  //     </div>\r\n  //   )\r\n  // }\r\n  // default - no object detected yet\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" onClick={handleUpload}>\r\n        Select a picture\r\n      </Button>\r\n      <Link \r\n        to={{\r\n            pathname: \"/testAPI\",\r\n            state: { image: defaultImage }\r\n          }}\r\n        >\r\n          <Button variant=\"contained\">Upload</Button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ManualModalParent(props) {\r\n  let {parentCallback} = props;\r\n  const [detectedObject, setDetectedObject] = useState();\r\n    \r\n  let handleSubmit = () => {\r\n    //this happens on success - send the detectedObject to the parent\r\n    parentCallback(detectedObject);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      What is your item?\r\n      <form>\r\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"bottles\")}}>Jugs or Bottles</Button></p>     \r\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"containers\")}}>Containers</Button></p>\r\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"textiles\")}}>Textiles</Button></p>\r\n        <p><Button variant=\"contained\" onClick={() => {setDetectedObject(\"electronics\")}}>Electronics</Button></p>\r\n      <label>\r\n          Other: \r\n            <input type = \"text\" name=\"other\" />\r\n      </label>\r\n        <Button variant=\"contained\" onClick={handleSubmit}>Submit</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function FetchModal(props) {\r\n  let {detectedObject} = props;\r\n\r\n  let currentObject = (props.history.location.state || detectedObject || \"box\"); // result from image api\r\n\r\n  let [init, setInit] = useState(false);\r\n  let [data, setData] = useState();\r\n  let predefined = [\"containers\", \"jugs\", \"bottles\", \"electronics\", \"propane tanks\"];\r\n\r\n  let fetchResults = (URL) => {\r\n    fetch(URL, {\r\n      method: 'GET',\r\n    })\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n      setData(json);\r\n      setInit(true);\r\n    })\r\n    .catch((e) => console.log(e));\r\n  }\r\n\r\n  let url = `https://data.edmonton.ca/resource/gtej-pcij.json?$where=material_title like '%25${currentObject}%25'`;\r\n  if (predefined.includes(currentObject) || 'box') // COMMENT IN TO ACCESS QS FLOW\r\n  {\r\n    // go straight to question/answer flow\r\n    return (<QuestionModal detectedObject={currentObject}/>)\r\n  } else {\r\n    if (!init) {\r\n      fetchResults(url);\r\n    }\r\n  }\r\n\r\n  if (data && data.length === 1) {\r\n    // go to next... i dont think this works\r\n    history.push('/final');\r\n  }\r\n\r\n  if (!init) {\r\n    return (\r\n      <div>\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data && (data.length > 1) \r\n        && data.map((data, i) => {\r\n          return (\r\n            <Link \r\n                to={{\r\n                    pathname: \"/final\",\r\n                    state: { title: data[\"material_title\"], result: data[\"stream_title\"], info: data[\"special_instructions\"]}\r\n                  }}\r\n            >\r\n              <Button>\r\n                {data[\"material_title\"]}\r\n              </Button>\r\n            </Link>\r\n          )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction QuestionModal(props) {\r\n  let {detectedObject, parentCallback} = props;\r\n  let [result, setResult] = useState(null); // \"r\" or \"w\"\r\n  let [nextStep, setNextStep] = useState(); // 'follow up', 'next', or 'material'\r\n  let [materialType, setMaterialType] = useState();\r\n  let [materialStream, setMaterialStream] = useState();\r\n\r\n  // assuming these are the only options we will handle:\r\n  // container, jug, bottle, electronic, propane tanks, textiles\r\n  // other will get handled differently\r\n  let containerContent = [\r\n    \"Is the container empty and dry?\",\r\n    \"Please dry the container\"\r\n  ];\r\n\r\n  let jugContent = [\r\n    \"Is there a straw or lid?\",\r\n    \"Please separate the straw and lid and send them to waste\",\r\n    \"Is it less than 5 liters?\"\r\n  ]\r\n\r\n  if (materialStream) {\r\n    return (\r\n      <div>\r\n        We recommend: {materialStream}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //default\r\n  let content = (<div>Next results</div>)\r\n\r\n    // Qs for Item types (Step 1)\r\n    if (detectedObject === 'box' || detectedObject === 'containers') {\r\n      content = (\r\n        <div>\r\n          {containerContent[0]}\r\n          <Button variant=\"contained\" onClick={() => setNextStep('material')}>Yes</Button>\r\n          <Button variant=\"contained\" onClick={() => setNextStep('follow up')}>No</Button>\r\n        </div>\r\n      )\r\n      if (nextStep === 'follow up') {\r\n        content = (\r\n          <div>\r\n            {containerContent[1]}\r\n            <Button variant=\"contained\" onClick={() => setNextStep('material')}>All Done!</Button>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    else if (detectedObject === 'jugs' || detectedObject === 'bottles') {\r\n      content = (\r\n        <div>\r\n          {jugContent[0]}\r\n          <Button variant=\"contained\" onClick={() => setNextStep('follow up')}>Yes</Button>\r\n          <Button variant=\"contained\" onClick={() => setNextStep('next')}>No</Button>\r\n        </div>\r\n      ) \r\n      if (nextStep === 'follow up') {\r\n          content = (\r\n            <div>\r\n              {jugContent[1]}\r\n              <Button variant=\"contained\" onClick={() => setNextStep('next')}>All Done!</Button>\r\n            </div>\r\n          )\r\n      } if (nextStep === 'next') {\r\n          content = (\r\n            <div>\r\n              {jugContent[2]}\r\n              <Button variant=\"contained\" onClick={() => setNextStep('material')}>Yes</Button>\r\n              <Button variant=\"contained\" onClick={() => setResult('w')}>No</Button>\r\n            </div>\r\n          )\r\n        }\r\n    }\r\n    else if (detectedObject === 'electronics' || detectedObject === 'propane tanks') {\r\n      content = (\r\n        <div>\r\n          Look for the closest disposal center near you! (google maps?)\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      setNextStep('material');\r\n    }\r\n\r\n    //Material Qs\r\n    if (nextStep === 'material') {\r\n      content = (\r\n        <div className=\"materialPage\">\r\n          <div className=\"spacer1\">\r\n            <Button className=\"glassButton\" className=\"materialButton\" variant=\"contained\" onClick={() => setMaterialType('glass')}>Glass</Button>\r\n            <Button className=\"plasticButton\" className=\"materialButton\" variant=\"contained\" onClick={() => setMaterialType('plastic')}>Plastic</Button>\r\n            <Button className=\"metalButton\" className=\"materialButton\" variant=\"contained\" onClick={() => setResult('r')}>Metal</Button>\r\n            <Button className=\"paperButton\" className=\"materialButton\" variant=\"contained\" onClick={() => setMaterialType('paper')}>Paper</Button>\r\n            <Button className=\"styrofoamButton\" className=\"materialButton\" variant=\"contained\" onClick={() => setResult('w')}>Styrofoam</Button>\r\n          </div>\r\n        </div>\r\n      ) \r\n      if (materialType === 'glass') {\r\n        content = (\r\n          <div className=\"glass\">\r\n            <div className = \"spacer\">\r\n              <Button className=\"yesContainer\" variant=\"contained\" onClick={() => setResult('w')}>Yes</Button>\r\n              <Button className=\"noContainer\" variant=\"contained\" onClick={() => setResult('r')}>No</Button>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (materialType === 'plastic') {\r\n        content = (\r\n          <Button variant=\"contained\" onClick={() => setResult('w')}>1</Button>\r\n        )\r\n      }\r\n      else if (materialType === 'paper') {\r\n        content = (\r\n          <div className = \"wax\">\r\n            <div className = \"spacer\">\r\n              <Button className=\"yesContainer\" variant=\"contained\" onClick={() => setResult('w')}>Yes</Button>\r\n              <Button className=\"noContainer\" variant=\"contained\" onClick={() => setResult('r')}>No</Button>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    // This if statement is not working rn\r\n    if (result === ('r' || 'w')) {\r\n      console.log(result);\r\n      <div>\r\n        Your {detectedObject} is {result}.\r\n        <Link \r\n          to={{\r\n            pathname: \"/final\",\r\n            state: { title: {detectedObject}, result: {result}, info: null}\r\n          }}\r\n      >\r\n        <Button>\r\n          {detectedObject}\r\n        </Button>\r\n      </Link>\r\n      </div>\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>Follow Up Questions: {detectedObject}</h1> */}\r\n      {content}\r\n \r\n    </div>\r\n  )\r\n}\r\n\r\nexport function FinalResult(props) {\r\n  // if passing through link\r\n  // <Link \r\n  //     to={{\r\n  //         pathname: \"/final\",\r\n  //         state: { title: ..., result: ..., info: ...}\r\n  //       }}\r\n  // >\r\n  // content here\r\n  // </Link>\r\n  let {title, result, info} = props.history.location.state;\r\n\r\n  return (\r\n    <div>\r\n    <h1>\r\n      {title}\r\n    </h1>\r\n    We suggest:\r\n    <p>\r\n      {result}\r\n    </p>\r\n    <p>\r\n      {info}\r\n    </p>\r\n    <Link to=\"/home\">\r\n      Start Over\r\n    </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {Button} from '@material-ui/core/';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ImageRecognition(props) {\r\n  let {image} = props.history.location.state; // image can be accessed here\r\n  let [selectedImage, setSelectedImage] = useState(image);\r\n  let [result, setResult] = useState(); // save result here after fetch\r\n  let [init, setInit] = useState(false);\r\n\r\n  let fetchResult = () => {\r\n    //fetch google result here\r\n    setResult(\"box\");\r\n    setInit(true);\r\n  }\r\n  if (!init) {\r\n    fetchResult();\r\n  }\r\n\r\n\r\n  if (result) {\r\n    return (\r\n      <div>\r\n        Your photo has been recognized. Your item: {result}\r\n        <Link \r\n            to={{\r\n                pathname: \"/fetching\",\r\n              }}\r\n        >\r\n          <Button>\r\n            Yes, Proceed\r\n          </Button>\r\n        </Link>\r\n        \r\n        <Button>\r\n          No, let's try again\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      Loading...\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageRecognition;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport history from './history';\r\nimport './App.css';\r\n// import { createBrowserHistory as history } from 'history';\r\nimport Login from './Login';\r\nimport Home, {FinalResult, FetchModal} from './Home';\r\nimport ImageRecognition from './ImageRecognition'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={history}>\r\n        <div className=\"App\">\r\n              <Switch>\r\n              <Route exact path=\"/\" component={Login} />\r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/final\" component={FinalResult} />\r\n              <Route path=\"/testAPI\" component={ImageRecognition} />\r\n              <Route path=\"/fetching\" component={FetchModal} />\r\n              </Switch>\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}